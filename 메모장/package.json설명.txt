@@package.json 

name : URL이나 Command Line의 일부로 사용될 소문자로 표기된 214자 이내의 프로젝트(패키지) 이름으로, 
    간결하고 직관적인 이름으로 설정하되 다른 모듈과 동일한 이름을 피하세요.
version : SemVer(The semantic versioner for npm)로 분석 가능한 형태의 버전을 지정합니다.
description : 프로젝트(패키지)의 설명을 지정합니다.(npm search 사용 시 도움이 됩니다.)
keywords : 프로젝트(패키지)의 키워드를 배열로 지정합니다.(npm search 사용 시 도움이 됩니다.)
homepage : 프로젝트 홈페이지로 연결되는 URL을 지정합니다.
bugs : 패키지에 문제가 있을 때 보고될 이슈 트래커(추적시스템) 및 이메일 주소 등에 대한 URL을 지정합니다.
license : 패키지 사용을 허용하는 방법과 제한 사항을 알 수 있도록 라이센스를 지정합니다.
author : 제작자의 이름을 지정합니다.
files : 패키지가 의존성으로 설치될 때 같이 포함될 파일들의 배열입니다.생략하면 자동 제외로 설정된 파일을 제외한 모든 파일이 포함됩니다
main : 프로그램의 기본 진입 점(entry point)를 지정합니다.
repository : 코드가 존재하는 장소를 지정합니다.GitHub를 사용하면 npm docs 명령을 사용하여 찾을 수 있습니다.
script : 패키지 라이프 사이클에서 여러 번 실행되는 스크립트 명령을 포함합니다.
dependencies : 패키지의 배포 시 포함될 의존성 모듈을 지정합니다.
devDependencies : 패키지의 개발 시 사용될 의존성 모듈을 지정합니다.(배포 시 포함되지 않습니다)
     ~version : 버전과 대략 동일, 버그 수정 릴리즈
     ^version : 버전과 호환, 이전 버전과 호환, 버그 수정 릴리즈
bundledDependencies : 패키지를 게시할 때 번들로 묶을 패키지 이름을 배열로 지정합니다.npm 패키지를 로컬에서 보존해야 하거나 단일 파일 다운로드를 통해 사용할 수있는 경우 npm pack을 실행하여 패키지를 <name>-<version>.tgz 형태의 tarball 파일)로 묶을 수 있습니다.
engines : 패키지가 작동하는 Node 버전을 지정합니다.
private : 개인 저장소의 우연한 발행을 방지하기 위해 npm에서 패키지의 공개 여부를 지정합니다. 
